#1. Network & Hosts

# controller
172.16.5.10       controller
# compute
172.16.5.11       compute
# network1
172.16.5.12       network1
# network2
172.16.5.13       network2


#2. NTP

# controller
yum install chrony
# Edit the /etc/chrony.conf
  server NTP_SERVER iburst
  allow 172.16.0.0/16

###
systemctl enable chronyd.service
systemctl start chronyd.service

# compute & network
yum install chrony

# Edit the /etc/chrony.conf
  server controller iburst

###
systemctl enable chronyd.service
systemctl start chronyd.service


# Verify NTP
chronyc sources


#2. Yum repo
yum -y install centos-release-openstack-mitaka
yum -y install https://rdoproject.org/repos/rdo-release.rpm
yum -y install yum-plugin-priorities
yum -y upgrade
yum -y install python-openstackclient
yum -y install openstack-selinux


#3. Controller MySql
yum -y install mariadb mariadb-server python2-PyMySQL

# edit the /etc/my.cnf.d/openstack.cnf
[mysqld]
bind-address = 0.0.0.0

default-storage-engine = innodb
innodb_file_per_table
collation-server = utf8_general_ci
character-set-server = utf8

###
systemctl enable mariadb.service
systemctl start mariadb.service
###
mysql_secure_installation



mysql -u root -p

GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'  IDENTIFIED BY '12345';
flush privileges;


CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'controller'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%'  IDENTIFIED BY '12345';
flush privileges;


CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'controller'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%'  IDENTIFIED BY '12345';
flush privileges;


CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'controller'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%'  IDENTIFIED BY '12345';
flush privileges;

CREATE DATABASE nova_api;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'controller' IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '12345';
flush privileges;

CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'controller'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%'  IDENTIFIED BY '12345';
flush privileges;


CREATE DATABASE cinder;
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'controller'  IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%'  IDENTIFIED BY '12345';
flush privileges;


#4. Controller RabbitMQ
yum -y install rabbitmq-server

systemctl enable rabbitmq-server.service
systemctl start rabbitmq-server.service

rabbitmqctl add_user openstack 12345
rabbitmqctl set_permissions openstack ".*" ".*" ".*"


#5. Controller Memcached
yum -y install memcached python-memcached
systemctl enable memcached.service
systemctl start memcached.service

#6. Controller Keystone
yum -y install openstack-keystone httpd mod_wsgi

# edit /etc/keystone/keystone.conf
[DEFAULT]
admin_token = 12345

[database]
connection = mysql+pymysql://keystone:12345@controller/keystone

[token]
provider = fernet

###
su -s /bin/sh -c "keystone-manage db_sync" keystone
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

# edit /etc/httpd/conf/httpd.conf
ServerName controller

# edit /etc/httpd/conf.d/wsgi-keystone.conf
Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

###
systemctl enable httpd.service
systemctl start httpd.service



# create default keystone project/user/endpoint/services
export OS_TOKEN=12345
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3


openstack service create --name keystone --description "OpenStack Identity" identity
openstack endpoint create --region RegionOne identity public http://controller:5000/v3
openstack endpoint create --region RegionOne identity internal http://controller:5000/v3
openstack endpoint create --region RegionOne identity admin http://controller:35357/v3

openstack domain create --description "Default Domain" default
openstack project create --domain default --description "Admin Project" admin
openstack user create --domain default --password-prompt admin
openstack role create admin
openstack role add --project admin --user admin admin

openstack project create --domain default --description "Service Project" service

openstack project create --domain default --description "Demo Project" demo
openstack user create --domain default --password-prompt demo
openstack role create user
openstack role add --project demo --user demo user

# Verify keystone
unset OS_TOKEN OS_URL
openstack --os-auth-url http://controller:35357/v3 --os-project-domain-name default --os-user-domain-name default --os-project-name admin --os-username admin token issue

openstack --os-auth-url http://controller:5000/v3 --os-project-domain-name default --os-user-domain-name default --os-project-name demo --os-username demo token issue


# keytone glance
openstack user create --domain default --password-prompt glance
openstack role add --project service --user glance admin
openstack service create --name glance --description "OpenStack Image service" image
openstack endpoint create --region RegionOne image public http://controller:9292
openstack endpoint create --region RegionOne image internal http://controller:9292
openstack endpoint create --region RegionOne image admin http://controller:9292

# keystone nova
openstack user create --domain default --password-prompt nova
openstack role add --project service --user nova admin
openstack service create --name nova --description "OpenStack Compute" compute
openstack endpoint create --region RegionOne compute public http://controller:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1/%\(tenant_id\)s



# keystone neutron
openstack user create --domain default --password-prompt neutron
openstack role add --project service --user neutron admin
openstack service create --name neutron --description "OpenStack Networking" network
openstack endpoint create --region RegionOne network public http://controller:9696
openstack endpoint create --region RegionOne network internal http://controller:9696
openstack endpoint create --region RegionOne network admin http://controller:9696


#7. Controller glance
yum -y install openstack-glance

# Edit /etc/glance/glance-api.conf

[database]
connection = mysql+pymysql://glance:12345@controller/glance

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = 12345

[paste_deploy]
flavor = keystone

[glance_store]
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/


# Edit the /etc/glance/glance-registry.conf
[database]
connection = mysql+pymysql://glance:12345@controller/glance

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = 12345

[paste_deploy]
flavor = keystone


###
su -s /bin/sh -c "glance-manage db_sync" glance


systemctl enable openstack-glance-api.service openstack-glance-registry.service
systemctl start openstack-glance-api.service openstack-glance-registry.service


systemctl enable openstack-glance-api.service openstack-glance-registry.service
systemctl restart openstack-glance-api.service openstack-glance-registry.service

# Verify glane
curl -O  http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img

openstack image create "Cirros-0.3.4-64bit" --file cirros-0.3.4-x86_64-disk.img --disk-format qcow2 --container-format bare --public

openstack image list


openstack image create "Ubuntu-14.04.4-64bit" --file trusty2.qcow2 --disk-format qcow2 --container-format bare --public


#8. Nova

# Controller Nova
yum -y install openstack-nova-api openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler

# Edit the /etc/nova/nova.conf
[DEFAULT]
enabled_apis = osapi_compute,metadata

rpc_backend = rabbit

auth_strategy = keystone

my_ip = 172.16.5.10

use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver


[api_database]
connection = mysql+pymysql://nova:12345@controller/nova_api

[database]
connection = mysql+pymysql://nova:12345@controller/nova

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = 12345

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = 12345

[vnc]
vncserver_listen = $my_ip
vncserver_proxyclient_address = $my_ip

[glance]
api_servers = http://controller:9292

[oslo_concurrency]
lock_path = /var/lib/nova/tmp


su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova

systemctl enable openstack-nova-api.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
systemctl start openstack-nova-api.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service



# Compute node nova
yum -y install openstack-nova-compute

# Edit the /etc/nova/nova.conf 
[DEFAULT]
rpc_backend = rabbit

auth_strategy = keystone

my_ip = 172.16.5.10

use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = 12345

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = 12345

[vnc]
enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = $my_ip
novncproxy_base_url = http://controller:6080/vnc_auto.html

[glance]
api_servers = http://controller:9292

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[libvirt]
virt_type = qemu


###
systemctl enable libvirtd.service openstack-nova-compute.service
systemctl start libvirtd.service openstack-nova-compute.service


# Verify nova
openstack compute service list


#9. Neutron
# controller/compute/network node rpms
yum -y install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge openvswitch openstack-neutron-openvswitch ebtables


# controller/compute/network
# Edit the /etc/neutron/neutron.conf
[DEFAULT]
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True

rpc_backend = rabbit

auth_strategy = keystone

notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True

[database]
connection = mysql+pymysql://neutron:12345@controller/neutron

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = 12345

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = 12345

[nova]
auth_url = http://controller:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = 12345

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp



# ========================================================OPENVSWITCH AGENT SETTINGS===========================================
# controller/compute/network
# ml2 ovs(/etc/neutron/plugins/ml2/ml2_conf.ini)
[DEFAULT]

[ml2]
type_drivers = flat,vlan,gre,vxlan
tenant_network_types = vxlan
mechanism_drivers = openvswitch,l2population
extension_drivers = port_security

[ml2_type_flat]
flat_networks = external

[ml2_type_geneve]

[ml2_type_gre]

[ml2_type_vlan]

[ml2_type_vxlan]
vni_ranges = 1000:10000

[securitygroup]
#enable_ipset = True
#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver

[agent]
l2_population = True
arp_responder = True
tunnel_types = vxlan
enable_distributed_routing = True
prevent_arp_spoofing = True

[ovs]
local_ip = 20.0.5.10

# controller/compute/network
# openvswitch agent(/etc/neutron/plugins/ml2/openvswitch_agent.ini)
[DEFAULT]

[agent]
l2_population = true
arp_responder = true

tunnel_types = vxlan
enable_distributed_routing = true
prevent_arp_spoofing = true

[ovs]
local_ip = 20.0.5.10
bridge_mappings = external:br-ex

[securitygroup]
enable_security_group = true
# enable firewall api but not essentially not work
firewall_driver = neutron.agent.firewall.NoopFirewallDriver
#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
#enable_ipset = true


# controller node nova
# Edit the /etc/nova/nova.conf
[neutron]
url = http://controller:9696
auth_url = http://controller:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = 12345

service_metadata_proxy = True
metadata_proxy_shared_secret = 12345

# enable l3 ha and dvr
# controller node neutron.conf
[DEFAULT]
l3_ha = True

# network node l3 agent
# edit /etc/neutron/l3_agent.ini
[DEFAULT]
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
external_network_bridge =
agent_mode = dvr_snat

# compute node l3 agent
# edit /etc/neutron/l3_agent.ini
[DEFAULT]
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
external_network_bridge =
agent_mode = dvr

# network node metadata agent
# edit /etc/neutron/metadata_agent.ini
[DEFAULT]
nova_metadata_ip = controller
metadata_proxy_shared_secret = 12345

# network node dhcp agent
# edit /etc/neutron/dhcp_agent.ini
[DEFAULT]
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = True

# network node
# ovs external bridge
ovs-vsctl add-br br-ex
ovs-vsctl add-port br-ex enp0s8
ifdown enp0s8 && ifup enp0s8 && ifdown br-ex && ifup br-ex && ovs-vsctl add-port br-ex enp0s8


# controller/compute/network
ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini

# controller/compute/network
# create neutron db
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

# controller
systemctl restart openstack-nova-api.service

# controller
systemctl enable neutron-server.service
systemctl restart neutron-server.service
    
# compute node
systemctl enable openvswitch neutron-openvswitch-agent.service neutron-l3-agent.service
systemctl restart openvswitch neutron-openvswitch-agent.service neutron-l3-agent.service

# network node
systemctl enable openvswitch neutron-openvswitch-agent.service neutron-dhcp-agent.service neutron-l3-agent.service neutron-metadata-agent.service
systemctl restart openvswitch neutron-openvswitch-agent.service neutron-dhcp-agent.service neutron-l3-agent.service neutron-metadata-agent.service

systemctl enable neutron-dhcp-agent.service
systemctl restart neutron-dhcp-agent.service

systemctl restart neutron-openvswitch-agent.service
systemctl restart  neutron-l3-agent.service


systemctl enable openvswitch neutron-openvswitch-agent.service libvirtd.service openstack-nova-compute.service
systemctl restart openvswitch neutron-openvswitch-agent.service libvirtd.service openstack-nova-compute.service


# tests
# restart ovs bridges
ifdown enp0s8 && ifup enp0s8 && ifdown br-ex && ifup br-ex && ovs-vsctl add-port br-ex enp0s8










#===========================================metering agent=====================================================
# neutron metering agent
yum install neutron-metering-agent


# edit /etc/neutron/metering_agent.ini
[DEFAULT]
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
driver = neutron.services.metering.drivers.iptables.iptables_driver.IptablesMeteringDriver


# edit /etc/neutron/neutron.conf
[DEFAULT]
service_plugins = router,metering


#
systemctl enable neutron-metering-agent.service
systemctl start neutron-metering-agent.service

#
systemctl restart neutron-metering-agent.service

#
systemctl stop neutron-metering-agent.service
systemctl disable neutron-metering-agent.service
#=========================================metering agent=======================================================








# ========================================================LINUX BRIDGE SETTINGS===========================================
# ml2 linux_bridge
# Edit the /etc/neutron/plugins/ml2/ml2_conf.ini
[DEFAULT]


[ml2]
type_drivers = flat,vlan,vxlan
tenant_network_types = vxlan
mechanism_drivers = openvswitch,l2population
extension_drivers = port_security


[ml2_type_flat]
flat_networks = provider


[ml2_type_geneve]


[ml2_type_gre]


[ml2_type_vlan]


[ml2_type_vxlan]
vni_ranges = 1000:10000

[securitygroup]
enable_ipset = True


# Linux bridge agent
# edit /etc/neutron/plugins/ml2/linuxbridge_agent.ini
[DEFAULT]

[agent]


[linux_bridge]
physical_interface_mappings = provider:enp0s8

[securitygroup]
enable_security_group = True
# enable firewall api but not essentially not work
firewall_driver = neutron.agent.firewall:NoopFirewallDriver


[vxlan]
enable_vxlan = True
local_ip = 20.0.5.10
l2_population = True


# network node l3 agent
# Edit the /etc/neutron/l3_agent.ini 
[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
external_network_bridge =

# network node dhcp
# Edit the /etc/neutron/dhcp_agent.ini
[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = True


# network node metadata agent
# Edit the /etc/neutron/metadata_agent.ini
[DEFAULT]
...
nova_metadata_ip = controller
metadata_proxy_shared_secret = 12345

# controller node nova
# Edit the /etc/nova/nova.conf
[neutron]
url = http://controller:9696
auth_url = http://controller:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = 12345

service_metadata_proxy = True
metadata_proxy_shared_secret = 12345


###
ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

systemctl restart openstack-nova-api.service

# controller
systemctl enable neutron-server.service
systemctl start neutron-server.service

# network node
systemctl enable neutron-linuxbridge-agent.service neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service
systemctl start neutron-linuxbridge-agent.service neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service
# ========================================================LINUX BRIDGE SETTINGS===========================================



#10. dashboard
yum -y install openstack-dashboard

# edit /etc/openstack-dashboard/local_settings
OPENSTACK_HOST = "controller"
ALLOWED_HOSTS = ['*', ]
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

CACHES = {
    'default': {
         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
         'LOCATION': 'controller:11211',
    }
}
OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST
OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
OPENSTACK_API_VERSIONS = {
    "identity": 3,
    "image": 2,
    "volume": 2,
}
OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = "default"
OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"
OPENSTACK_NEUTRON_NETWORK = {
    'enable_router': True,
    'enable_distributed_router': True,
    'enable_ha_router': True,
}
TIME_ZONE = "Aisa/Shanghai"
systemctl restart httpd.service memcached.service






################Ceilomter###############
yum install -y mongodb-server mongodb
#Edit the /etc/mongod.conf
bind_ip = 0.0.0.0
smallfiles = true

## mongodb service
systemctl enable mongod.service
systemctl start mongod.service

## mongodb service
systemctl disable mongod.service
systemctl stop mongod.service

# keystone
openstack user create --domain default --password-prompt ceilometer
openstack role add --project service --user ceilometer admin

openstack service create --name ceilometer --description "Telemetry" metering
openstack endpoint create --region RegionOne metering public http://controller:8777
openstack endpoint create --region RegionOne metering internal http://controller:8777
openstack endpoint create --region RegionOne metering admin http://controller:8777

yum install -y openstack-ceilometer-api openstack-ceilometer-collector openstack-ceilometer-notification openstack-ceilometer-central python-ceilometerclient

# Edit the /etc/ceilometer/ceilometer.conf
[DEFAULT]
rpc_backend = rabbit

auth_strategy = keystone


[database]
connection = mongodb://ceilometer:12345@controller:27017/ceilometer


[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = 12345

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = ceilometer
password = 12345

[service_credentials]
os_auth_url = http://controller:5000/v2.0
os_username = ceilometer
os_tenant_name = service
os_password = 12345
interface = internalURL
region_name = RegionOne

systemctl enable openstack-ceilometer-api.service openstack-ceilometer-notification.service openstack-ceilometer-central.service openstack-ceilometer-collector.service
systemctl start openstack-ceilometer-api.service openstack-ceilometer-notification.service openstack-ceilometer-central.service openstack-ceilometer-collector.service

systemctl disable openstack-ceilometer-api.service openstack-ceilometer-notification.service openstack-ceilometer-central.service openstack-ceilometer-collector.service
systemctl stop openstack-ceilometer-api.service openstack-ceilometer-notification.service openstack-ceilometer-central.service openstack-ceilometer-collector.service
